{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26c22283.chunk.js","sourcesContent":["export const types ={\r\n\r\n    uiOpenModal:'[ui] Open modal',\r\n    uiCloseModal:'[ui] Close modal',\r\n\r\n    eventSetActive:'[event] Set Active',\r\n    eventLogout:'[event] logout event',\r\n\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventAddNew:'[event] Add new',\r\n    eventClearActiveEvent:'[event] Clear active event',\r\n    eventUpdated:'[event] Event updated',\r\n    eventDeleted:'[event] Event deleted',\r\n    eventLoaded:'[event] Event loaded',\r\n\r\n    authCheckingFinish:'[auth] Finish cheking login state',\r\n    authStartLogin:'[auth] Start login',\r\n    authLogin:'[auth] login',\r\n    authStartRegister:'[auth] Start Register',\r\n    authStartTokenRenew:'[auth] Start token renew',\r\n    authLogout:'[auth] Logout',\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n    checking:true,\r\n    // uid:null,\r\n    // name:null\r\n}\r\n\r\n\r\nexport const authReducer = ( state= initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking:false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n// events:[{\r\n//     id:new Date().getTime(),\r\n//     title:'cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor:\"#fafafa\",\r\n//     notes:'comprar el pastel',\r\n//     user:{\r\n//         _id:'123',\r\n//         name: 'Jesus'\r\n//     }\r\n// }],\r\n\r\nconst initialState={\r\n    events:[],\r\n    activeEvent:null,\r\n\r\n};\r\n\r\nexport const calendarReducer= (state=initialState,action )=>{\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent:action.payload,\r\n            }\r\n            \r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent:null,\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events:state.events.map(\r\n                    e=>(e.id===action.payload.id) ? action.payload : e \r\n                )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events:state.events.filter(\r\n                    e=>(e.id!==state.activeEvent.id)\r\n                ),\r\n                activeEvent:null,\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload],\r\n            };\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n    modalOpen:false,\r\n}\r\n\r\n\r\nexport const uiReducer = ( state= initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:true,\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    calendar:calendarReducer,\r\n    auth:authReducer,\r\n});","import { createStore, compose, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk)\r\n    )\r\n);","\r\nconst baseUrl=process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken=(endpoint,data, method='GET')=>{\r\n\r\n    const url=`${baseUrl}/${ endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'content-type':'application/json',\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken=(endpoint,data, method='GET')=>{\r\n\r\n    const url=`${baseUrl}/${ endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'content-type':'application/json',\r\n                'x-token': token,\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events)=>{\r\n\r\n    \r\n\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew=(event)=>{\r\n    return async(dispatch,getState)=>{\r\n        const {uid,name}=getState().auth;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events',event,'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id=body.evento.id;\r\n                event.user={\r\n                    _id: uid,\r\n                    name:name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n            console.log(event);\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n        }\r\n     \r\n       \r\n    }\r\n};\r\n\r\n\r\nconst eventAddNew= (event)=>({\r\n    type:types.eventAddNew,\r\n    payload:event,\r\n});\r\n\r\nexport const eventSetActive= (event)=>({\r\n    type:types.eventSetActive,\r\n    payload:event,\r\n});\r\n\r\nexport const eventClearActiveEvent=()=>({\r\n    type:types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate=(event)=>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated=(event)=>({\r\n    type:types.eventUpdated,\r\n    payload:event,\r\n});\r\n\r\n\r\nexport const eventStartDelete=()=>{\r\n    return async(dispatch,getState)=>{\r\n        \r\n        const {id}= getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted= ()=>({type:types.eventDeleted});\r\n\r\nexport const eventStartLoading=()=>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events=prepareEvents( body.eventos);\r\n            console.log(events);\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n        }\r\n\r\n    }\r\n}\r\nconst eventLoaded =(events)=>({\r\n    type:types.eventLoaded,\r\n    payload:events\r\n});\r\n\r\nexport const eventLogout=()=>({type:types.eventLogout});\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin= (email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp= await fetchSinToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name,\r\n            }));\r\n        }else{\r\n            Swal.fire('Error', body.msg,'eror')\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister=(email,password, name)=>{\r\n    return async(dispatch)=>{\r\n        const resp= await fetchSinToken('auth/new',{name,email,password},'POST');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name,\r\n            }));\r\n        }else{\r\n            Swal.fire('Error', body.msg,'eror')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = ()=>{\r\n    return async(dispatch)=>{\r\n        const resp= await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name,\r\n            }));\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = ()=>({type:types.authCheckingFinish});\r\n\r\nconst login=(user)=>({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\n\r\nexport const startLogout=()=>{\r\n    return(dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}\r\nconst logout=()=>({type:types.authLogout});\r\n","import { useState } from \"react\";\n\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState=initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const[ formLoginValues, handleLoginInputChange ] =useForm({\r\n        lEmail:'jesus@gmail.com',\r\n        lPassword:'123456'\r\n    });\r\n\r\n    const[ formRegisterValues, handleRegisterInputChange ] =useForm({\r\n        rName:'enrique',\r\n        rEmail:'enrique@gmail.com',\r\n        rPassword:'123456',\r\n        rPassword2:'123456',\r\n    });\r\n\r\n    const {lEmail,lPassword}=formLoginValues;\r\n\r\n    const {rName,rEmail,rPassword,rPassword2}=formRegisterValues;\r\n\r\n    const handleLogin=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword));\r\n    }\r\n    const handleRegister=(e)=>{\r\n        e.preventDefault();\r\n        if(rPassword!==rPassword2){\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales','error');\r\n        }\r\n        dispatch(startRegister(rEmail,rPassword,rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lEmail\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event}) => {\r\n    const {title, user}= event;\r\n    return (\r\n        <div>\r\n            <strong>\r\n                {title}\r\n            </strong>\r\n            <br/>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const uiOpenModal = ()=>({\r\n    type:types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = ()=>({\r\n    type:types.uiCloseModal\r\n})","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\n\r\nconst nowPlus1= moment().clone().minutes(0).seconds(0).add(2,'hours');\r\n\r\nconst initEvent ={\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:nowPlus1.toDate(),    \r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen}=useSelector(state=>state.ui);\r\n\r\n    const {activeEvent}=useSelector(state=>state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes,title, start, end}= formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n        \r\n    }, [activeEvent,setFormValues]);\r\n\r\n    const handleInputChange = ({ target })=>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]:target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = ()=>{\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n\r\n      \r\n    }\r\n\r\n    const handleStartDateChange=(e)=>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e,\r\n        })\r\n    }\r\n    const handleEndDateChange=(e)=>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e,\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm= (e)=>{\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'la fecha fin debe de ser mayor a la fecha de inicio');\r\n            \r\n        }\r\n        if(title.trim().length < 2){\r\n\r\n            return setTitleValid(false); \r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        \r\n        setTitleValid(true); \r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{ (activeEvent)? 'Editar Evento': 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew=()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete=()=>{\r\n        dispatch(eventStartDelete())\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n// const events=[{\r\n//     title:'cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor:\"#fafafa\",\r\n//     notes:'comprar el pastel',\r\n//     user:{\r\n//         _id:'123',\r\n//         name: 'Jesus'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n    const onDoubleClick= (e)=>{\r\n        dispatch(uiOpenModal());\r\n   \r\n    }\r\n    const onSelectEvent= (e)=>{\r\n        dispatch(eventSetActive(e));\r\n    }\r\n    const onViewChange =(e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const eventStyleGetter = ( event,start, end, isSelected )=>{\r\n        \r\n        const style={\r\n            backgroundColor:(uid===event.user._id)?'#367CF7':'#465660',\r\n            borderRadius:'0px',\r\n            opacity:0.8,\r\n            display:'block',\r\n            color:'white',\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectSlot= (e)=>{\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event:CalendarEvent,\r\n                }}\r\n            />\r\n            \r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n\r\n        dispatch(startChecking());\r\n        \r\n    }, [dispatch]);\r\n\r\n    if (checking){\r\n        return <h5>Espere...</h5>\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isAuthenticated={ !!uid }\r\n                    />    \r\n                    <Redirect to=\"/\" />    \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}